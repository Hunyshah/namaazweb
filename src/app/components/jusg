/ type Props = {}


// const HeroSection = ({jammattime}:any) => {
//     const[light,setLight]= useState(false)

//     useEffect(()=>{

//       function convertTo24Hour(time12h:any) {
//         function parseTimeStringToMilliseconds(timeString:any) {
//           const [time, period] = timeString.split(' ');
//           const [hours, minutes] = time.split(':').map(Number);
        
//           let totalMilliseconds = (hours % 12) * 60 * 60 * 1000; // Convert hours to milliseconds
//           totalMilliseconds += minutes * 60 * 1000; // Convert minutes to milliseconds
        
//           if (period.toLowerCase() === 'pm') {
//             totalMilliseconds += 12 * 60 * 60 * 1000; // Add 12 hours in milliseconds for PM
//           }
        
//           return totalMilliseconds;
//         }
//         const milliseconds = parseTimeStringToMilliseconds(time12h);
// console.log(milliseconds); // Output: 53100000 (milliseconds)
//         return {
//           hour: milliseconds,
//         };}
//         function compareTimes(time1:any, time2:any) {
//           function getTimeStringFromDate(date:any) {
//             const hours = date.getHours();
//             const minutes = date.getMinutes();
//             const period = hours >= 12 ? 'pm' : 'am';
//             const formattedHours = (hours % 12 === 0 ? 12 : hours % 12).toString().padStart(2, '0');
//             const formattedMinutes = minutes.toString().padStart(2, '0');
          
//             return `${formattedHours}:${formattedMinutes} ${period}`;
//           }
//           const currentDate =  new Date();
//           console.log(currentDate.getMilliseconds())
//          const timeVar = currentDate.getTime()
//       const timeString = getTimeStringFromDate(currentDate);
//       console.log(timeString)
      
//           // const currentMinute = currentTime.getMinutes();
        
//           const { hour: hour1,  } = convertTo24Hour(time1);
//           const { hour: hour2,  } = convertTo24Hour(time2);
//           const {hour : hour3,} = convertTo24Hour(timeString)
          
//           console.log(hour1)
//           console.log(hour2)
//           console.log(timeVar)
//           console.log(hour3)
          
        
//           console.log(`${hour3} >= ${hour1} && ${hour3}<=${hour2} ,${light}`)
//           if ( hour1 <= hour3 && hour3 >= hour2    ) {
//             console.log(`${hour1} >= ${hour3} && ${hour3}<=${hour2} ,${light} bin tery `)
            
//              setLight(true); // Current time is before time1
//              if(hour3>=hour2){
//               setLight(false)
//              }
             
            
            
          
//         }
        
        
       
        
//          // Output: -1 (current time is before time1)
//         }
//         for (let i = 0; i < jammattime?.length; i++) {
//           const item = jammattime[i];
//           compareTimes(item.data().TimeIn, item.data().JamatTime);
//           if (light === true){
//             break
//           }
//         }
        
        
        
 
 
// },[jammattime])
//     const[inTime,setInTime]= useState(0)
//     const[jammatstateTime,setjammatTime]= useState(0)
//     const currentDate = new Date();
//     const hour = currentDate.getHours();
// const minute = currentDate.getMinutes();
// const second = currentDate.getSeconds();
// console.log(hour)
// console.log(`Current Time: ${hour}:${minute}:${second}`);

    // useEffect(()=>{

    //   jammattime?.forEach((item:any) => {
        
    //     function timeStringToSeconds(timeStr:any) {
    //         const [hours, minutes, seconds] = timeStr.split(':').map(Number);
    //         const dateObj = new Date();
    //         dateObj.setHours(hours);
    //         dateObj.setMinutes(minutes);
    //         dateObj.setSeconds(seconds);
    //         return dateObj.getTime() / 1000;
    //       }
    //       console.log(timeStringToSeconds(item?.data()?.TimeIn))
    //       setInTime(timeStringToSeconds(item?.data()?.TimeIn))
    //       setjammatTime(timeStringToSeconds(item?.data()?.JamatTime))
    //       console.log(inTime)
    //       if (inTime >= inTime && inTime < jammattime){
    //         setLight(true)
    //       }

    //     });
        

    // },[jammattime])

   
    // console.log(light)

    // if (jammattime?.data()?.TimeIn && jammattime.data().TimeIn < jammattime.data().Jamat ){
    //   setLight(true)
    // }